b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="c">#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define MAX 128\n#define MAX_SZAMJEGY 5\n\n/*Sorok beolvasasa*/\nint getline(char s[], int lim) {\n    int i;\n    char c;\n    for(i=0;i&lt;lim &amp;&amp; (c=getchar())!=\'\\n\' &amp;&amp; c!=EOF;++i)s[i]=c;\n    if(c == EOF) {\n return -1;\n    }\n    s[i]=\'\\0\';\n    while(c!=\'\\n\'&amp;&amp; c!=EOF)c=getchar();\n    return i;\n}\n\n/* Space-k es Tabok eltavolitasa*/\nvoid trim(char s[]) {\n int i=0,j;\n while((s[i]==\' \')||(s[i]==\'\\t\')) {\n  i++;\n }\n if(i&gt;0) {\n  for(j=0;j&lt;strlen(s);j++) {\n   s[j]=s[j+i];\n  }\n s[j]=\'\\0\';\n }\n\n i=strlen(s)-1;\n while((s[i]==\' \')||(s[i]==\'\\t\')) {\n  i--;\n }\n if(i&lt;(strlen(s)-1)) {\n  s[i+1]=\'\\0\';\n }\n}\n\n/* Elojelet nem veszi figyelembe */\n int strlenSzam(char s[]) {\n if(s[0] == \'+\' || s[0] == \'-\') {\n  return strlen(s)-1;\n } else {\n  return strlen(s);\n }\n}\n\n/* Megvizsgalja, hogy egesz szam-e, csak a trim utan erdemes hasznalni mert a szokozokre nem figyel */\nint egesz(char s[]) {\n    int i;\n    i=(s[0]==\'-\' || s[0]==\'+\')?1:0;\n    while(s[i]){\n if(!isdigit(s[i]))return 0;\n i++;\n    }\n    return 1;\n}\n\n/* Torli az elojelet es visszaadja azt */\nint elojelTorles(char s[]) {\n int i, hossz, elojel=0;\n hossz = strlen(s);\n\n if(s[0] == \'+\' || s[0] == \'-\') {\n  elojel = s[0];\n  for(i=0; i&lt;hossz;++i) {\n   s[i] = s[i+1];\n  }\n }\n return elojel;\n}\n\n\nvoid main(void) {\n char tmp[MAX+1];/*Osszesen 128 karakter lehet itt, de kell plusz 1 a \\0 miatt*/\n char osszegTomb[MAX_SZAMJEGY+3] /*Ha ket ugyanannyi vagy kevesebb szamjegyu szamot adunk ossze az is max +1 jeggyel lesz nagyobb + 1 az elojelnek es +1 a lanczaro 0-nak*/;\n int i,vege=0, line, hossz, szamjegy_osszeg=0, elojel;\n long szam1, szam2, osszeg;\n /*Bekerese az adatoknak*/\n printf(&quot;Kerem adjon meg egy %d jegyu szamot:\\n&quot;, MAX_SZAMJEGY);\n while(!vege) {\n  /*Bekerese az adatoknak*/\n  line = getline(tmp, MAX);\n  /*Nulla hossz nem jo*/\n  if(!line) {\n   printf(&quot;Ures sort adott meg.\\n&quot;);\n  /* EOF, kilepes */\n  } else if(line == -1) {\n   printf(&quot;Vege a bekeresnek, a program leall.\\n&quot;);\n   vege = 1;\n  /* A maximum bekerheto karakterek ellenorzese, ami 127 + 1 ami a \\n igy a getline 127-et ad vissza. Annal nagyobb nem lehet */\n  } else if(line &gt; MAX-1) {\n   printf(&quot;Tul sok karaktert adott meg.\\n&quot;);\n  } else {\n   if(!vege) {\n    /* Leszedjuk a szokozoket es tabokat */\n    trim(tmp);\n    /* Egesz szam kell */\n    if(!egesz(tmp)) {\n     printf(&quot;Nem egesz szam.\\n&quot;);\n    /* Szam hosszanak ellenorzese az elojelek nelkul */\n    } else if(strlenSzam(tmp) &gt; MAX_SZAMJEGY) {\n     printf(&quot;Nem negyjegyu szam.\\n&quot;);\n    } else {\n     /* Szamma alakitas */\n     szam1 = atol(tmp);\n     /* Elojel letorlese a megforditas elott hiszem akkor hatra kerulne az elojel. Az elojel valtozo felveszi az elojelet */\n     elojel = elojelTorles(tmp);\n     /* Forditas */\n     strrev(tmp);\n     /* 2. szam atalakitasa */\n     szam2 = atol(tmp);\n     /* Ha az elojel negativ volt beszorzunk -1-gyel igy megkapjuk int formaban a megforditott szamot. */\n     if(elojel == \'-\') {\n      szam2 *= -1;\n     }\n     /* Osszeg */\n     osszeg = szam1 + szam2;\n     printf(&quot;A ket szam osszege: %ld\\n&quot;, osszeg);\n     /* Az osszegek atalakitjuk es berakjuk a osszegTomb nevu tombbe */\n     ltoa(osszeg, osszegTomb, 10);\n     /* Ismet toroljuk az elojelet, hiszem a szamjegyek osszeget ez nem befolyasolja */\n     elojelTorles(osszegTomb);\n     hossz = strlen(osszegTomb);\n     szamjegy_osszeg = 0;\n     /* Szamjegyek osszeadasa */\n     for(i=0; i&lt;hossz;++i) {\n      szamjegy_osszeg += osszegTomb[i]-\'0\';\n     }\n     printf(&quot;Az uj szam szamjegyeinek osszege: %d\\n&quot;, szamjegy_osszeg);\n     /* Paritas eldontese */\n     if(szamjegy_osszeg % 2 == 0) {\n      printf(&quot;Az uj szam paros.\\n&quot;);\n     } else {\n      printf(&quot;Az uj szam paratlan.\\n&quot;);\n     }\n     /* Oszthatosag eldontese */\n     if(szam1 % szam2 == 0) {\n      printf(&quot;A felcserelt szam osztoja az eredetinek.\\n&quot;);\n      printf(&quot;Eredmeny:%.2f\\n&quot;, (double)szam1 / (double)szam2);\n     } else {\n      printf (&quot;A felcserelt szam nem osztoja az eredetinek.\\n&quot;);\n     }\n     printf(&quot;\\nKerem adja meg a kovetkezo %d jegyu szamot:\\n&quot;, MAX_SZAMJEGY);\n    }\n   }\n  }\n }\n}\n</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'