b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="cpp">#include&quot;load.h&quot;\n#include&quot;main.h&quot;\nchar CModel::Loader(char *p_filename)\n{ \n FILE *potok;\n if((potok = fopen&amp;#40;p_filename,&quot;rb&quot;&amp;#41;)== NULL) return 0;\n while (ftell (potok) &lt; filelength (fileno (potok))) \n {\n  fread (&amp;id;, 2, 1, potok); \n  fread (&amp;der;, 4, 1, potok); \n  switch (id)\n        {\n   case 0x4d4d: \n    break;\n\n   case 0x3d3d:\n    break;\n   \n   case 0x4000:\n      i= 0;\n     do\n     {\n      fread (&amp;name;, 1, 1, potok);\n      Name[i]=name;\n      ++i;\n     }while(name != \'\\0\' );\n    break;\n   \n   case 0x4100:\n    break;\n    \n   case 0x4110:\n    fread(&amp;g_model.dor,sizeof(unsigned short),1,potok);\n    g_model.verts = new CVertex[g_model.dor];\n    for (int t = 0; t &lt; g_model.dor; t++)\n    {\n     fread(&amp;g_model.verts[t].x,sizeof(float),1, potok);\n     fread(&amp;g_model.verts[t].y, sizeof(float),1, potok);\n     fread(&amp;g_model.verts[t].z, sizeof(float),1, potok);\n    }\n    break;\n   \n   case 0x4120:\n    \n    fread(&amp;g_model.dur,sizeof(unsigned short),1,potok);\n    g_model.polyg = new CPolygon[g_model.dur];\n\n    for (int q = 0; q &lt; g_model.dur; q++) \n    {\n     fread(&amp;g_model.polyg[q].a,sizeof(unsigned short),1, potok);\n     fread(&amp;g_model.polyg[q].b, sizeof(unsigned short),1, potok);\n     fread(&amp;g_model.polyg[q].c, sizeof(unsigned short),1, potok);\n     fread (&amp;g_model.face_flags, sizeof (unsigned short), 1, potok);\n    }\n    break;\n\n    case 0x4140:\n   \n    fread(&amp;g_model.dur,sizeof(unsigned short),1,potok);\n    g_model.mapin = new CMaps[g_model.dur];\n    for ( i = 0; i &lt; g_model.dur; i++) \n    {\n     fread(&amp;g_model.mapin[i].n,sizeof(float),1, potok);\n     fread(&amp;g_model.mapin[i].m, sizeof(float),1, potok);\n     \n    }\n    break;\n\n   case 0xb000:\n    \n   \n   default:\n    fseek(potok, der-6, SEEK_CUR);\n  }\n }\n fclose(potok);\n return *p_filename;\n}\n\nint width=640;\nint height=480;\n\n\ndouble rotation_x=0, rotation_x_increment=0.0;\ndouble rotation_y=0, rotation_y_increment=1.0;\ndouble rotation_z=0, rotation_z_increment=0.0;\n\nint filling=1;\n\nvoid init(void)\n{ \n    glClearColor(0.0, 0.0, 0.0, 0.0);\n    glShadeModel(GL_SMOOTH); \n glViewport(0,0,width,height); \n glMatrixMode(GL_PROJECTION); \n    glLoadIdentity(); \n    gluPerspective(45.0f,(GLfloat)width/(GLfloat)height,1.0f,10000.0f); \n    glEnable(GL_DEPTH_TEST);\n glPolygonMode (GL_FRONT_AND_BACK, GL_FILL); \n\n \n}\nvoid reshape (int w, int h)\n{\n width=w; \n    height=h;\n \n glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \n    glViewport(0,0,width,height); \n\n    glMatrixMode(GL_PROJECTION); \n    glLoadIdentity(); \n    gluPerspective(30.0f,(GLfloat)width/(GLfloat)height,1.0f,1000.0f);\n\n    glutPostRedisplay ();\n}\n\nvoid display(void)\n{\n glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \n glEnable(GL_TEXTURE_2D);\n glBindTexture(GL_TEXTURE_2D, photo_tex);\n    glMatrixMode(GL_MODELVIEW); \n    glLoadIdentity(); \n    glTranslatef(0.0,0.0,-20); \n\n rotation_x = rotation_x + rotation_x_increment;\n    rotation_y = rotation_y + rotation_y_increment;\n    rotation_z = rotation_z + rotation_z_increment;\n\n    if (rotation_x &gt; 359) rotation_x = 0;\n    if (rotation_y &gt; 359) rotation_y = 0;\n    if (rotation_z &gt; 359) rotation_z = 0;\n\n    glRotatef(rotation_x,1.0,0.0,0.0);\n    glRotatef(rotation_y,0.0,1.0,0.0);\n    glRotatef(rotation_z,0.0,0.0,1.0);\n \n glBegin(GL_TRIANGLES );\n for( int e = 0; e &lt; g_model.dur; e++)\n {\n  glTexCoord2f( g_model.mapin[ g_model.polyg[e].a ].n,\n             g_model.mapin[ g_model.polyg[e].a].m);\n  \n  glVertex3f\n    ( \n    g_model.verts[g_model.polyg[e].a].x,\n    g_model.verts[g_model.polyg[e].a].z,\n    g_model.verts[g_model.polyg[e].a].y);\n  glTexCoord2f( \n   g_model.mapin[ g_model.polyg[e].b ].n,\n   g_model.mapin[ g_model.polyg[e].b].m);\n  \n    glVertex3f\n    ( \n    g_model.verts[g_model.polyg[e].b].x,\n    g_model.verts[g_model.polyg[e].b].z,\n    g_model.verts[g_model.polyg[e].b].y);\n    glTexCoord2f( \n     g_model.mapin[ g_model.polyg[e].c ].n,\n     g_model.mapin[ g_model.polyg[e].c].m);\n    glVertex3f\n    ( \n    g_model.verts[g_model.polyg[e].c].x,\n    g_model.verts[g_model.polyg[e].c].z,\n    g_model.verts[g_model.polyg[e].c].y);\n }\n glEnd();\n glPopMatrix();\n glutSwapBuffers();\n glFlush();\n}\n\nvoid keyboard (unsigned char key, int x, int y)\n{\n switch (key)\n    {\n case \'*\':\n  {\n   exit(0);\n   break;\n  }\n  \n        case \' \':\n            rotation_x_increment = 0;\n            rotation_y_increment = 0;\n            rotation_z_increment = 0;\n        break;\n        case \' \': \n            if (filling==0)\n            {\n                glPolygonMode (GL_FRONT_AND_BACK, GL_FILL); // Polygon rasterization mode (polygon filled)\n                filling=1;\n            }   \n            else \n            {\n                glPolygonMode (GL_FRONT_AND_BACK, GL_LINE); // Polygon rasterization mode (polygon outlined)\n                filling=0;\n            }\n        break; \n    }\n}\n\n\nint main(int argc, char **argv)\n{\n //glEnable(GL_ALPHA_TEST);\n //glEnable(GL_BLEND);\n    //glEnable(GL_COLOR_MATERIAL);\n    //glEnable(GL_LIGHTING);\n    //glEnable(GL_LIGHT0);\n g_model.Loader(&quot;face.3DS&quot;);\n glutInit(&amp;argc;, argv);    \n    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);\n    glutInitWindowSize(width,height);\n    glutInitWindowPosition(0,0);\n    glutCreateWindow(&quot;Loader 3.ds&quot;);    \n    glutDisplayFunc(display);\n    glutIdleFunc(display);\n    glutReshapeFunc (reshape);\n glutKeyboardFunc (keyboard);\n //glutFullScreen();\n init();\n glPixelStorei(GL_UNPACK_ALIGNMENT, 1);\n image = auxDIBImageLoad(L&quot;face.bmp&quot;);\n glGenTextures(1, &amp;photo;_tex);\n glBindTexture(GL_TEXTURE_2D, photo_tex );\n glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n glTexImage2D(GL_TEXTURE_2D, 0, 3, \n           image-&gt;sizeX,\n     image-&gt;sizeY,\n     0, GL_RGB, GL_UNSIGNED_BYTE,\n     image-&gt;data);\n glutMainLoop();\n return(0);    \n}\n</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'