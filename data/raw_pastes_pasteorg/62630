b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="nohighlight">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Text;\nusing System.Net;\nusing System.IO;\n\nnamespace PushSharp.Blackberry\n{\n    public partial class _Default : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n\n            pushToWidget(&quot;Hi Anoop If You will Get Notifcation please miss call me 8130513899&quot;);\n\n        }\n\n\n\n       public bool pushToWidget(string pushedMessage)\n        {\n           // String BESAddress = &quot;https://pushapi.eval.blackberry.com/mss/PD_pushRequest&quot;;\n            //String BESWebserverListenPort = &quot;pushPort&quot;;\n            String widgetNotificationUrl = &quot;https://pushapi.eval.blackberry.com/mss/PD_pushRequest&quot;;\n            String pushUserName = &quot;3457-B730k4394m49rOr96r33M8t74303c51k728&quot;;\n            String pushPassword = &quot;smnBIWO3&quot;;\n          //  String pushPort = &quot;33215&quot;;\n            string Boundary = &quot;Boundary &quot;;\n            string DeliverBefore = DateTime.UtcNow.AddMinutes(5).ToString(&quot;s&quot;, System.Globalization.CultureInfo.InvariantCulture) + &quot;Z&quot;;\n            Response.Write(DeliverBefore);\n            bool success = true;\n            StringBuilder Data = new StringBuilder();\n            Data.AppendLine(&quot;--&quot; + Boundary);\n            Data.AppendLine(&quot;Content-Type: application/xml; charset=utf-8&quot;);\n            Data.AppendLine(&quot;&quot;);\n            Data.AppendLine(&quot;&lt;?xml version=\\&quot;1.0\\&quot;?&gt;&quot;);\n            Data.AppendLine(&quot;&lt;!DOCTYPE pap PUBLIC \\&quot;-//WAPFORUM//DTD PAP 2.1//EN\\&quot;&gt;&quot;);\n            Data.AppendLine(&quot;&lt;pap&gt;&quot;);\n            Data.AppendLine(&quot;&lt;push-message push-id=&quot; + (char)34 + ID + (char)34 + &quot; deliver-before-timestamp=&quot; + \n\n(char)34 + DeliverBefore + (char)34 + &quot; source-reference=&quot; + (char)34 + pushUserName + (char)34 + &quot;&gt;&quot;);\n            Data.AppendLine(&quot;&lt;address address-value=\\&quot;&quot; + &quot;push_all&quot; + &quot;\\&quot;/&gt;&quot;);\n            Data.AppendLine(&quot;&lt;quality-of-service delivery-method=\\&quot;unconfirmed\\&quot;/&gt;&quot;);\n            Data.AppendLine(&quot;&lt;/push-message&gt;&quot;);\n            Data.AppendLine(&quot;&lt;/pap&gt;&quot;);\n            Data.AppendLine(&quot;--&quot; + Boundary);\n            Data.AppendLine(&quot;Content-Type: text/plain&quot;);\n            Data.AppendLine(&quot;Push-Message-ID: &quot; + ID);\n            Data.AppendLine(&quot;&quot;);\n            Data.AppendLine(pushedMessage);\n            Data.AppendLine(&quot;--&quot; + Boundary + &quot;--&quot;);\n            Data.AppendLine(&quot;&quot;);\n            byte[] bytes = Encoding.ASCII.GetBytes(Data.ToString());\n\n            Stream requestStream = null;\n            HttpWebResponse HttpWRes = null;\n            HttpWebRequest HttpWReq = null;\n          \n            try\n            {\n                //http://&lt;BESName&gt;:&lt;BESPort&gt;/push?DESTINATTION=&lt;PIN/EMAIL&gt;&amp;PORT;=&lt;PushPort&gt;&amp;REQUESTURI;=/\n               // Build the URL to define our connection to the BES.\n\n                String BESName = &quot;cp3457.pushapi.eval.blackberry.com/mss/PD_pushRequest&quot;;\n\n                string httpURL = &quot;https://&quot; + BESName + &quot;/push?DESTINATION=2B838E45&amp;PORT=33215&amp;REQUESTURI;=/&quot;;\n\n             //   string httpURL = BESAddress + &quot;:&quot; + BESWebserverListenPort+ &quot;/push?DESTINATION=&quot; + pushPin + &quot;&amp;PORT;=&quot; + pushPort+ &quot;&amp;REQUESTURI;=/&quot;;\n                   \n                //make the connection\n                HttpWReq = (HttpWebRequest)WebRequest.Create(httpURL);\n                HttpWReq.Method = (&quot;POST&quot;);\n                //add the headers nessecary for the push\n                HttpWReq.ContentType = &quot;text/plain&quot;;\n                HttpWReq.ContentLength = bytes.Length;\n                // ******* Test this *******\n                HttpWReq.Headers.Add(&quot;X-Rim-Push-Id&quot;, &quot;push_all&quot; + &quot;~&quot; + DateTime.Now); //&quot;~&quot; +pushedMessage +\n                HttpWReq.Headers.Add(&quot;X-Rim-Push-Reliability&quot;, &quot;application-preferred&quot;);\n                HttpWReq.Headers.Add(&quot;X-Rim-Push-NotifyURL&quot;, (widgetNotificationUrl + &quot;push_all&quot; + &quot;~&quot; + pushedMessage + &quot;~&quot; + DateTime.Now).Replace(&quot; &quot;, &quot;&quot;));\n\n                // *************************\n               \n               // HttpWReq.Credentials = new MDSCredentials(pushUserName, pushPassword);\n                HttpWReq.Credentials = new NetworkCredential(pushUserName, pushPassword);\n\n                Console.WriteLine(pushedMessage);\n                requestStream = HttpWReq.GetRequestStream();\n                //Write the data from the source\n                requestStream.Write(bytes, 0, bytes.Length);\n                requestStream.Close();\n                //get the response\n                HttpWRes = (HttpWebResponse)HttpWReq.GetResponse();\n\n                //if the MDS received the push parameters correctly it will either respond with okay or accepted\n                if (HttpWRes.StatusCode == HttpStatusCode.OK || HttpWRes.StatusCode == HttpStatusCode.Accepted)\n                {\n                    success = true;\n                }\n                else\n                {\n                    success = false;\n                }\n                //Close the streams\n\n                HttpWRes.Close();\n                requestStream.Close();\n            }\n            catch (System.Exception e)\n            {\n                success = false;\n            }\n\n            return success;\n        }\n\n\n    }\n}</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'