b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="cpp">#include &lt;iostream&gt;\r\n#include &lt;fstream&gt;\r\n#include &lt;string&gt;\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\n//-----Funktionsprototypen --------------------------------------\r\n\r\nvoid meldung            (int sprachnummer, int auswahl);\r\nvoid lese_datei         (char (&amp;lager)[3][5], int sprachnummer);\r\nvoid einlesen           (char (&amp;lager)[3][5], int sprachnummer);\r\nvoid auslesen           (char (&amp;lager)[3][5], int sprachnummer);\r\nvoid drucke_belegung    (char (&amp;lager)[3][5], int sprachnummer);\r\n\r\n//---------------------------------------------------------------------\r\n\r\n//------ Hauptprogramm ------\r\n\r\nint main() {\r\n\r\n    char lager[3][5] = {};                               // Zweidimensional - 3 Zeilen x 5 Spalten\r\n\r\n     for (int i = 0 ; i &lt; 3 ; i ++) {                    // Lager auf 0 setzen\r\n        for (int j = 0 ; j &lt; 5 ; j++) {\r\n                lager [i][j] = &amp;#039;0&amp;#039;;\r\n        }\r\n    }\r\n\r\n //Sprachabfrage\r\n\r\n    int sprachnummer;\r\n    char auswahl;\r\n    char sprache;\r\n\r\n    do {\r\n            cout &lt;&lt; &quot;Bitte geben w\xc3\xa4hlen Sie die gew\xc3\xbcnschte Sprache aus!: (d = Deutsch // e = Englisch): &quot;;\r\n            cin &gt;&gt; sprache;\r\n            cout &lt;&lt; endl;\r\n\r\n    } while ((sprache !=&amp;#039;d&amp;#039;) &amp;&amp; (sprache !=&amp;#039;e&amp;#039;));\r\n\r\n\r\n     if (sprache == &amp;#039;d&amp;#039;)\r\n         sprachnummer = 1;\r\n\r\n     if (sprache == &amp;#039;e&amp;#039;)\r\n        sprachnummer = 2;\r\n\r\n    do {\r\n\r\n    auswahl = 0;\r\n    meldung (sprachnummer, auswahl);\r\n    cout &lt;&lt; endl;\r\n    cin &gt;&gt; auswahl;\r\n    cout &lt;&lt; endl;\r\n\r\n    //Ausgabe Hauptmen\xc3\xbc\r\n\r\n        switch (auswahl) {\r\n            case &amp;#039;1&amp;#039;:     // Einlesen einer Datei\r\n                      lese_datei(lager, sprachnummer);\r\n                      break;\r\n            case &amp;#039;2&amp;#039;:     // Einlesen eines Teils\r\n                      einlesen(lager, sprachnummer);\r\n                      break;\r\n            case &amp;#039;3&amp;#039;:     // Auslegen eines Teils\r\n                      auslesen(lager, sprachnummer);\r\n                      break;\r\n            case &amp;#039;4&amp;#039;:     // Belegung ausgeben\r\n                      drucke_belegung(lager, sprachnummer);\r\n                      break;\r\n        }\r\n\r\n    } while (auswahl != &amp;#039;5&amp;#039;);\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n//-----Unterprogramm Meldung ------//\r\n\r\n\r\nvoid meldung (int sprachnummer, int auswahl) {\r\n     int switch_meldung;\r\n     switch_meldung = sprachnummer * 20 + auswahl;\r\n\r\n     switch (switch_meldung){\r\n\r\n         case 20: cout &lt;&lt; &quot;W\xc3\xa4hlen Sie einer der folgenden Funktionen: &quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;1: Einlesen einer Datei&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;2: Einlesen eines Teils&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;3: Auslesen eines Teils&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;4: Auslesen der aktuellen Fifos am Bildschirm&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;5: Programm beenden&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; endl;\r\n                    break;\r\n\r\n        case 21: cout &lt;&lt; &quot;Bitte geben Sie einen Dateinamen ein: &quot;;\r\n                    break;\r\n\r\n        case 22: cout &lt;&lt; &quot;Datei wurde erfolgreich eingelesen!&quot;;\r\n                    break;\r\n\r\n        case 23: cout &lt;&lt; &quot;Zieldatei konnte nicht gefunden werden!&quot;;\r\n                    break;\r\n\r\n        case 24: cout &lt;&lt; &quot;Bitte geben Sie die Nummer der Ebene ein [1, 2, 3]: &quot;;\r\n                    break;\r\n\r\n        case 25: cout &lt;&lt; &quot;Bitte geben Sie die Farbcodierung des Teils ein [r, g, b]: &quot;;\r\n                    break;\r\n\r\n        case 26: cout &lt;&lt; &quot;Teil wurde erfolgreich eingelesen!&quot;;\r\n                    break;\r\n\r\n        case 27: cout &lt;&lt; &quot;Bitte geben Sie eine g\xc3\xbcltige Farbcodierung ein!&quot;;\r\n                    break;\r\n\r\n        case 28: cout &lt;&lt; &quot;In der Ebene befindet sich kein Platz mehr!&quot;;\r\n                    break;\r\n\r\n        case 29: cout &lt;&lt; &quot;Bitte geben Sie eine g\xc3\xbcltige Ebene ein!&quot;;\r\n                    break;\r\n\r\n        case 30: cout &lt;&lt; &quot;Bitte geben Sie die Ebene ein, aus der Sie ein Teil entnehmen wollen: &quot;;\r\n                    break;\r\n\r\n        case 31: cout &lt;&lt; &quot;Die Farbe des entnommenes Teiles lautet: &quot;;\r\n                    break;\r\n\r\n        case 32: cout &lt;&lt; &quot;In der gew\xc3\xa4hlten Ebene befindet sich kein entnehmbares Teil&quot;;\r\n                    break;\r\n\r\n        case 33: cout &lt;&lt; &quot;Bitte geben Sie eine g\xc3\xbcltige Ebene ein!&quot;;\r\n                    break;\r\n\r\n        case 34: cout &lt;&lt; &quot;             Aktuelle Fifos&quot; &lt;&lt; endl;\r\n                    break;\r\n\r\n\r\n\r\n\r\n        case 40: cout &lt;&lt; &quot;Choose one of the following functions: &quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;1: Input of a file&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;2: Input of a part&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;3: Extract a part&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;4: Eject the current fifos&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; &quot;5: Exit&quot; &lt;&lt; endl;\r\n                  cout &lt;&lt; endl;\r\n                    break;\r\n\r\n        case 41: cout &lt;&lt; &quot;Please enter a filename: &quot;;\r\n                    break;\r\n\r\n        case 42: cout &lt;&lt; &quot;file was read in successfully!&quot;;\r\n                    break;\r\n\r\n        case 43: cout &lt;&lt; &quot;The file could not be found!&quot;;\r\n                    break;\r\n\r\n        case 44: cout &lt;&lt; &quot;Please enter the number of the level [1, 2, 3]: &quot;;\r\n                    break;\r\n\r\n        case 45: cout &lt;&lt; &quot;Please enter the colour of the part [r, g, b]: &quot;;\r\n                    break;\r\n\r\n        case 46: cout &lt;&lt; &quot;Part was read in successfully!&quot;;\r\n                    break;\r\n\r\n        case 47: cout &lt;&lt; &quot;Please enter a valid colour of the part!&quot;;\r\n                    break;\r\n\r\n        case 48: cout &lt;&lt; &quot;There is no more space on the level!&quot;;\r\n                    break;\r\n\r\n        case 49: cout &lt;&lt; &quot;Please enter a valid number of the level!&quot;;\r\n                    break;\r\n\r\n        case 50: cout &lt;&lt; &quot;Please enter the level from which you want to extract a part: &quot;;\r\n                    break;\r\n\r\n        case 51: cout &lt;&lt; &quot;The colour of the extracted part is: &quot;;\r\n                    break;\r\n\r\n        case 52: cout &lt;&lt; &quot;There is no removable part in the selected level&quot;;\r\n                    break;\r\n\r\n        case 53: cout &lt;&lt; &quot;Please enter a valid level!&quot;;\r\n                    break;\r\n\r\n        case 54: cout &lt;&lt; &quot;             current fifos&quot; &lt;&lt; endl;\r\n                    break;\r\n\r\n     }\r\n }\r\n\r\n //------------- 1. Unterfunktion ( Datei einlesen) -------------\r\n\r\nvoid lese_datei(char (&amp;lager)[3][5], int sprachnummer) {\r\n    ifstream quelle;\r\n    string dateiname;\r\n\r\n    //Dateiname eingeben\r\n    meldung (sprachnummer, 1);\r\n\r\n    cin &gt;&gt; dateiname;\r\n    dateiname += &quot;.txt&quot;;\r\n\r\n    string zeile;\r\n\r\n    int i = 0;\r\n\r\n    quelle.open(dateiname.c_str());\r\n    if (quelle.is_open()) {\r\n        while (getline(quelle, zeile)) {\r\n            int j = 0;\r\n            for (int y = 0; y &lt; zeile.length(); y ++) {\r\n                if (zeile[y] == &amp;#039;r&amp;#039; || zeile[y] == &amp;#039;b&amp;#039; || zeile[y] == &amp;#039;g&amp;#039; || zeile[y] == &amp;#039;0&amp;#039;) {\r\n                    lager[i][j] = zeile[y];\r\n                    j++;\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n\r\n\r\n        cout &lt;&lt; endl;\r\n\r\n        //Datei erfolgreich eingelesen\r\n        meldung (sprachnummer, 2);\r\n\r\n        cout &lt;&lt; endl;\r\n        cout &lt;&lt; endl;\r\n\r\n        quelle.close();\r\n    } else {\r\n\r\n        //Datei nicht gefunden\r\n        meldung (sprachnummer, 3);\r\n        cout &lt;&lt; endl;\r\n        cout &lt;&lt; endl;\r\n    }\r\n}\r\n\r\n\r\n//------------- 2. Unterfunktion (Teil einlesen) -------------\r\n\r\nvoid einlesen(char (&amp;lager)[3][5], int sprachnummer){\r\n\r\n char farbe;\r\n int i, j;\r\n\r\n  //Abfragen der Ebene:\r\n\r\n  //Ebene eingeben\r\n  meldung (sprachnummer, 4);\r\n cin &gt;&gt; i;\r\n\r\n if (i == 1 || i == 2 || i == 3) {                         // Pr\xc3\xbcfen ob Eingabe der Ebene korrekt\r\n\r\n      if (lager [i - 1][4] == &amp;#039;0&amp;#039;) {\r\n                                                           // wenn ja, ob Platz in der Ebene\r\n            meldung (sprachnummer, 5);\r\n            cin &gt;&gt; farbe;\r\n            cout &lt;&lt; endl;\r\n\r\n                if (farbe == &amp;#039;r&amp;#039; || farbe == &amp;#039;g&amp;#039; || farbe == &amp;#039;b&amp;#039;) {                   // Pr\xc3\xbcfen ob Farbcodierung korrekt\r\n                        for (j = 4; j &gt; 0; j--) {\r\n                        lager [i - 1] [j] = lager [i - 1] [j - 1];\r\n                         }\r\n\r\n                        lager [i - 1] [0] = farbe;                                    // Teil einlesen\r\n\r\n                        meldung (sprachnummer, 6);\r\n                        cout &lt;&lt; endl;\r\n                        cout &lt;&lt; endl;\r\n                         }\r\n                         else ( meldung (sprachnummer, 7) );\r\n\r\n      }\r\n      else ( meldung (sprachnummer, 8) );\r\n      cout &lt;&lt; endl;\r\n }\r\n else\r\n    ( meldung (sprachnummer, 9) );\r\n}\r\n\r\n\r\n\r\n//------------- 3. Unterfunktion (Teil auslesen) -------------\r\n\r\nvoid auslesen(char (&amp;lager)[3][5], int sprachnummer){\r\n\r\n    char farbe;\r\n    int i;\r\n    int j = 4;\r\n\r\n     meldung (sprachnummer, 10);\r\n     cin &gt;&gt; i;\r\n\r\n\r\n    if (i == 1 || i == 2 || i == 3) {\r\n\r\n          if (lager [i - 1][0] != &amp;#039;0&amp;#039;) {\r\n\r\n              do { farbe = lager [i-1] [j];\r\n              j--;\r\n              } while (farbe == &amp;#039;0&amp;#039;);\r\n\r\n             meldung (sprachnummer, 11);\r\n             cout &lt;&lt; farbe;\r\n\r\n            lager [i-1] [j+1] = &amp;#039;0&amp;#039;;\r\n\r\n      } else (  meldung (sprachnummer, 12) ) ;\r\n\r\n} else (  meldung (sprachnummer, 13) );\r\n         cout &lt;&lt; endl;\r\n         cout &lt;&lt; endl;\r\n\r\n}\r\n\r\n\r\n//-------------  4. Unterfunktion ( Belgegung anzeigen) -------------\r\n\r\nvoid drucke_belegung(char (&amp;lager)[3][5], int sprachnummer) {\r\n\r\n    meldung (sprachnummer, 14);\r\n\r\n    for (int i = 0; i &lt; 3; i++) {\r\n            if (i == 0) {\r\n                    for (int j = 0; j &lt; 5; j++){\r\n                            if (j == 0) {\r\n                                cout &lt;&lt; &quot;             &quot;;\r\n                            }\r\n                            if (j &lt; 4) {\r\n                                cout &lt;&lt; &quot;Platz &quot; &lt;&lt; j+1 &lt;&lt; &quot; | &quot;;\r\n                            } else {\r\n                                cout &lt;&lt; &quot;Platz &quot; &lt;&lt; j+1 &lt;&lt; &quot;  &quot; &lt;&lt; endl;\r\n                                }\r\n                    }\r\n            }\r\n\r\n        for (int j = 0; j &lt; 5; j++) {\r\n                if (j == 0){\r\n                    cout &lt;&lt; &quot;Ebene &quot; &lt;&lt; i+1 &lt;&lt; &quot;: &quot; &lt;&lt; &quot;   |   &quot;;\r\n                }\r\n            cout &lt;&lt; lager[i][j] &lt;&lt; &quot;    |    &quot;;\r\n        }\r\n        cout &lt;&lt; endl;\r\n\r\n            }\r\n\r\n            cout &lt;&lt; endl;\r\n    }</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'