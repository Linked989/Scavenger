b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="lua">vRPgt = {}\r\nTunnel.bindInterface(&quot;vRP_garages&quot;,vRPgt)\r\nProxy.addInterface(&quot;vRP_garages&quot;,vRPgt)\r\nvRP = Proxy.getInterface(&quot;vRP&quot;)\r\n\r\n--[[Local/Global]]--\r\n\r\nGVEHICLES = {}\r\nlocal inrangeofgarage = false\r\nlocal currentlocation = nil\r\n\r\nlocal garages = {\r\n  {name=&quot;Garage&quot;, colour=3, id=357, x=215.124, y=-791.377, z=29.646, h=0.0},\r\n    {name=&quot;Garage&quot;, colour=3, id=357, x=-334.685, y=289.773, z=84.705, h=0.0},\r\n    {name=&quot;Garage&quot;, colour=3, id=357, x=-55.272, y=-1838.71, z=25.442, h=0.0},\r\n    {name=&quot;Garage&quot;, colour=3, id=357, x=126.434, y=6610.04, z=30.750, h=0.0},\r\n}\r\n\r\nvehicles = {}\r\ngarageSelected = { {x=nil, y=nil, z=nil, h=nil}, }\r\nselectedPage = 0\r\n\r\nlang_string = {\r\nmenu1 = &quot;Store a vehicle&quot;,\r\nmenu2 = &quot;Get a vehicle&quot;,\r\nmenu3 = &quot;Close&quot;,\r\nmenu4 = &quot;Vehicles&quot;,\r\nmenu5 = &quot;Options&quot;,\r\nmenu6 = &quot;Get&quot;,\r\nmenu7 = &quot;Back&quot;,\r\nmenu8 = &quot;~g~E~s~ to open menu&quot;,\r\nmenu9 = &quot;Sell&quot;,\r\nmenu10 = &quot;~g~E~s~ to sell the vehicle at 50% of the purchase price&quot;,\r\nmenu11 = &quot;Update the vehicle&quot;,\r\nmenu12 = &quot;Next&quot;,\r\nstate1 = &quot;Out&quot;,\r\nstate2 = &quot;In&quot;,\r\ntext1 = &quot;The area is crowded&quot;,\r\ntext2 = &quot;This vehicle is not in the garage&quot;,\r\ntext3 = &quot;Vehicle out&quot;,\r\ntext4 = &quot;It&amp;#039;s not your vehicle&quot;,\r\ntext5 = &quot;Vehicle stored&quot;,\r\ntext6 = &quot;No vehicles present&quot;,\r\ntext7 = &quot;Vehicle sold&quot;,\r\ntext8 = &quot;Vehicle bought, good drive&quot;,\r\ntext9 = &quot;Insufficient funds&quot;,\r\ntext10 = &quot;Vehicle updated&quot;\r\n}\r\n--[[Functions]]--\r\n\r\nfunction vRPgt.spawnGarageVehicle(vtype, name, vehicle_plate, vehicle_colorprimary, vehicle_colorsecondary, vehicle_pearlescentcolor, vehicle_wheelcolor, vehicle_plateindex, vehicle_neoncolor1, vehicle_neoncolor2, vehicle_neoncolor3, vehicle_windowtint, vehicle_wheeltype, vehicle_mods0, vehicle_mods1, vehicle_mods2, vehicle_mods3, vehicle_mods4, vehicle_mods5, vehicle_mods6, vehicle_mods7, vehicle_mods8, vehicle_mods9, vehicle_mods10, vehicle_mods11, vehicle_mods12, vehicle_mods13, vehicle_mods14, vehicle_mods15, vehicle_mods16, vehicle_turbo, vehicle_tiresmoke, vehicle_xenon, vehicle_mods23, vehicle_mods24, vehicle_neon0, vehicle_neon1, vehicle_neon2, vehicle_neon3, vehicle_bulletproof, vehicle_smokecolor1, vehicle_smokecolor2, vehicle_smokecolor3, vehicle_modvariation) -- vtype is the vehicle type (one vehicle per type allowed at the same time)\r\n\r\n  local vehicle = vehicles[vtype]\r\n  if vehicle and not IsVehicleDriveable(vehicle[3]) then -- precheck if vehicle is undriveable\r\n    -- despawn vehicle\r\n    SetVehicleHasBeenOwnedByPlayer(vehicle[3],false)\r\n    Citizen.InvokeNative(0xAD738C3085FE7E11, vehicle[3], false, true) -- set not as mission entity\r\n    SetVehicleAsNoLongerNeeded(Citizen.PointerValueIntInitialized(vehicle[3]))\r\n    Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle[3]))\r\n\tTriggerEvent(&quot;vrp_garages:setVehicle&quot;, vtype, nil)\r\n  end\r\n\r\n  vehicle = vehicles[vtype]\r\n  if vehicle == nil then\r\n    -- load vehicle model\r\n    local mhash = GetHashKey(name)\r\n\r\n    local i = 0\r\n    while not HasModelLoaded(mhash) and i &lt; 10000 do\r\n      RequestModel(mhash)\r\n      Citizen.Wait(10)\r\n      i = i+1\r\n    end\r\n\r\n    -- spawn car\r\n    if HasModelLoaded(mhash) then\r\n      local x,y,z = vRP.getPosition({})\r\n      local nveh = CreateVehicle(mhash, x,y,z+0.5, GetEntityHeading(GetPlayerPed(-1)), true, false) -- added player heading\r\n      SetVehicleOnGroundProperly(nveh)\r\n      SetEntityInvincible(nveh,false)\r\n      SetPedIntoVehicle(GetPlayerPed(-1),nveh,-1) -- put player inside\r\n      SetVehicleNumberPlateText(nveh, &quot;P &quot; .. vRP.getRegistrationNumber({}))\r\n      Citizen.InvokeNative(0xAD738C3085FE7E11, nveh, true, true) -- set as mission entity\r\n      SetVehicleHasBeenOwnedByPlayer(nveh,true)\r\n\t  vehicle_migration = false\r\n      if not vehicle_migration then\r\n        local nid = NetworkGetNetworkIdFromEntity(nveh)\r\n        SetNetworkIdCanMigrate(nid,false)\r\n      end\r\n\r\n\t  TriggerEvent(&quot;vrp_garages:setVehicle&quot;, vtype, {vtype,name,nveh})\r\n\r\n      SetModelAsNoLongerNeeded(mhash)\r\n\t  \r\n\t  --grabbing customization\r\n      local plate = plate\r\n      local primarycolor = tonumber(vehicle_colorprimary)\r\n      local secondarycolor = tonumber(vehicle_colorsecondary)\r\n      local pearlescentcolor = vehicle_pearlescentcolor\r\n      local wheelcolor = vehicle_wheelcolor\r\n      local plateindex = tonumber(vehicle_plateindex)\r\n      local neoncolor = {vehicle_neoncolor1,vehicle_neoncolor2,vehicle_neoncolor3}\r\n      local windowtint = vehicle_windowtint\r\n      local wheeltype = tonumber(vehicle_wheeltype)\r\n      local mods0 = tonumber(vehicle_mods0)\r\n      local mods1 = tonumber(vehicle_mods1)\r\n      local mods2 = tonumber(vehicle_mods2)\r\n      local mods3 = tonumber(vehicle_mods3)\r\n      local mods4 = tonumber(vehicle_mods4)\r\n      local mods5 = tonumber(vehicle_mods5)\r\n      local mods6 = tonumber(vehicle_mods6)\r\n      local mods7 = tonumber(vehicle_mods7)\r\n      local mods8 = tonumber(vehicle_mods8)\r\n      local mods9 = tonumber(vehicle_mods9)\r\n      local mods10 = tonumber(vehicle_mods10)\r\n      local mods11 = tonumber(vehicle_mods11)\r\n      local mods12 = tonumber(vehicle_mods12)\r\n      local mods13 = tonumber(vehicle_mods13)\r\n      local mods14 = tonumber(vehicle_mods14)\r\n      local mods15 = tonumber(vehicle_mods15)\r\n      local mods16 = tonumber(vehicle_mods16)\r\n      local turbo = vehicle_turbo\r\n      local tiresmoke = vehicle_tiresmoke\r\n      local xenon = vehicle_xenon\r\n      local mods23 = tonumber(vehicle_mods23)\r\n      local mods24 = tonumber(vehicle_mods24)\r\n      local neon0 = vehicle_neon0\r\n      local neon1 = vehicle_neon1\r\n      local neon2 = vehicle_neon2\r\n      local neon3 = vehicle_neon3\r\n      local bulletproof = vehicle_bulletproof\r\n      local smokecolor1 = vehicle_smokecolor1\r\n      local smokecolor2 = vehicle_smokecolor2\r\n      local smokecolor3 = vehicle_smokecolor3\r\n      local variation = vehicle_modvariation\r\n\t  \r\n\t  --setting customization\r\n      SetVehicleColours(nveh, primarycolor, secondarycolor)\r\n      SetVehicleExtraColours(nveh, tonumber(pearlescentcolor), tonumber(wheelcolor))\r\n      SetVehicleNumberPlateTextIndex(nveh,plateindex)\r\n      SetVehicleNeonLightsColour(nveh,tonumber(neoncolor[1]),tonumber(neoncolor[2]),tonumber(neoncolor[3]))\r\n      SetVehicleTyreSmokeColor(nveh,tonumber(smokecolor1),tonumber(smokecolor2),tonumber(smokecolor3))\r\n      SetVehicleModKit(nveh,0)\r\n      SetVehicleMod(nveh, 0, mods0)\r\n      SetVehicleMod(nveh, 1, mods1)\r\n      SetVehicleMod(nveh, 2, mods2)\r\n      SetVehicleMod(nveh, 3, mods3)\r\n      SetVehicleMod(nveh, 4, mods4)\r\n      SetVehicleMod(nveh, 5, mods5)\r\n      SetVehicleMod(nveh, 6, mods6)\r\n      SetVehicleMod(nveh, 7, mods7)\r\n      SetVehicleMod(nveh, 8, mods8)\r\n      SetVehicleMod(nveh, 9, mods9)\r\n      SetVehicleMod(nveh, 10, mods10)\r\n      SetVehicleMod(nveh, 11, mods11)\r\n      SetVehicleMod(nveh, 12, mods12)\r\n      SetVehicleMod(nveh, 13, mods13)\r\n      SetVehicleMod(nveh, 14, mods14)\r\n      SetVehicleMod(nveh, 15, mods15)\r\n      SetVehicleMod(nveh, 16, mods16)\r\n      if turbo == &quot;on&quot; then\r\n        ToggleVehicleMod(nveh, 18, true)\r\n      else          \r\n        ToggleVehicleMod(nveh, 18, false)\r\n      end\r\n      if tiresmoke == &quot;on&quot; then\r\n        ToggleVehicleMod(nveh, 20, true)\r\n      else          \r\n        ToggleVehicleMod(nveh, 20, false)\r\n      end\r\n      if xenon == &quot;on&quot; then\r\n        ToggleVehicleMod(nveh, 22, true)\r\n      else          \r\n        ToggleVehicleMod(nveh, 22, false)\r\n      end\r\n\t\tSetVehicleWheelType(nveh, tonumber(wheeltype))\r\n      SetVehicleMod(nveh, 23, mods23)\r\n      SetVehicleMod(nveh, 24, mods24)\r\n      if neon0 == &quot;on&quot; then\r\n        SetVehicleNeonLightEnabled(nveh,0, true)\r\n      else\r\n        SetVehicleNeonLightEnabled(nveh,0, false)\r\n      end\r\n      if neon1 == &quot;on&quot; then\r\n        SetVehicleNeonLightEnabled(nveh,1, true)\r\n      else\r\n        SetVehicleNeonLightEnabled(nveh,1, false)\r\n      end\r\n      if neon2 == &quot;on&quot; then\r\n        SetVehicleNeonLightEnabled(nveh,2, true)\r\n      else\r\n        SetVehicleNeonLightEnabled(nveh,2, false)\r\n      end\r\n      if neon3 == &quot;on&quot; then\r\n        SetVehicleNeonLightEnabled(nveh,3, true)\r\n      else\r\n        SetVehicleNeonLightEnabled(nveh,3, false)\r\n      end\r\n      if bulletproof == &quot;on&quot; then\r\n        SetVehicleTyresCanBurst(nveh, false)\r\n      else\r\n        SetVehicleTyresCanBurst(nveh, true)\r\n      end\r\n      --if variation == &quot;on&quot; then\r\n      --  SetVehicleModVariation(nveh,23)\r\n      --else\r\n      --  SetVehicleModVariation(nveh,23, false)\r\n      --end\r\n      SetVehicleWindowTint(nveh,tonumber(windowtint))\r\n    end\r\n  else\r\n    vRP.notify({&quot;You can only have one &quot;..vtype..&quot; vehicule out.&quot;})\r\n  end\r\nend\r\n\r\nfunction vRPgt.spawnBoughtVehicle(vtype, name)\r\n\r\n  local vehicle = vehicles[vtype]\r\n  if vehicle then -- precheck if vehicle is undriveable\r\n    -- despawn vehicle\r\n    SetVehicleHasBeenOwnedByPlayer(vehicle[3],false)\r\n    Citizen.InvokeNative(0xAD738C3085FE7E11, vehicle[3], false, true) -- set not as mission entity\r\n    SetVehicleAsNoLongerNeeded(Citizen.PointerValueIntInitialized(vehicle[3]))\r\n    Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle[3]))\r\n\tTriggerEvent(&quot;vrp_garages:setVehicle&quot;, vtype, nil)\r\n  end\r\n\r\n  vehicle = vehicles[vtype]\r\n  if vehicle == nil then\r\n    -- load vehicle model\r\n    local mhash = GetHashKey(name)\r\n\r\n    local i = 0\r\n    while not HasModelLoaded(mhash) and i &lt; 10000 do\r\n      RequestModel(mhash)\r\n      Citizen.Wait(10)\r\n      i = i+1\r\n    end\r\n\r\n    -- spawn car\r\n    if HasModelLoaded(mhash) then\r\n      local x,y,z = vRP.getPosition({})\r\n      local nveh = CreateVehicle(mhash, x,y,z+0.5, GetEntityHeading(GetPlayerPed(-1)), true, false) -- added player heading\r\n      SetVehicleOnGroundProperly(nveh)\r\n      SetEntityInvincible(nveh,false)\r\n      SetPedIntoVehicle(GetPlayerPed(-1),nveh,-1) -- put player inside\r\n      SetVehicleNumberPlateText(nveh, &quot;P &quot; .. vRP.getRegistrationNumber({}))\r\n      Citizen.InvokeNative(0xAD738C3085FE7E11, nveh, true, true) -- set as mission entity\r\n      SetVehicleHasBeenOwnedByPlayer(nveh,true)\r\n\t  vehicle_migration = false\r\n      if not vehicle_migration then\r\n        local nid = NetworkGetNetworkIdFromEntity(nveh)\r\n        SetNetworkIdCanMigrate(nid,false)\r\n      end\r\n\r\n\t  TriggerEvent(&quot;vrp_garages:setVehicle&quot;, vtype, {vtype,name,nveh})\r\n\r\n      SetModelAsNoLongerNeeded(mhash)\r\n    end\r\n  else\r\n    vRP.notify({&quot;You can only have one &quot;..vtype..&quot; vehicule out.&quot;})\r\n  end\r\nend\r\n\r\nfunction vRPgt.despawnGarageVehicle(vtype,max_range)\r\n  local vehicle = vehicles[vtype]\r\n  if vehicle then\r\n    local x,y,z = table.unpack(GetEntityCoords(vehicle[3],true))\r\n    local px,py,pz = vRP.getPosition()\r\n\r\n    if GetDistanceBetweenCoords(x,y,z,px,py,pz,true) &lt; max_range then -- check distance with the vehicule\r\n      -- remove vehicle\r\n      SetVehicleHasBeenOwnedByPlayer(vehicle[3],false)\r\n      Citizen.InvokeNative(0xAD738C3085FE7E11, vehicle[3], false, true) -- set not as mission entity\r\n      SetVehicleAsNoLongerNeeded(Citizen.PointerValueIntInitialized(vehicle[3]))\r\n      Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle[3]))\r\n\t  TriggerEvent(&quot;vrp_garages:setVehicle&quot;, vtype, nil)\r\n      vRP.notify({&quot;~g~Vehicle stored.&quot;})\r\n    else\r\n      vRP.notify({&quot;~r~Too far away from the vehicle.&quot;})\r\n    end\r\n  else\r\n  vRP.notify({&quot;~r~You don&amp;#039;t have a personal vehicle out.&quot;})\r\n  end\r\nend\r\n\r\nfunction MenuGarage()\r\n    ped = GetPlayerPed(-1)\r\n\tselectedPage = 0\r\n    MenuTitle = &quot;Garage&quot;\r\n    ClearMenu()\r\n    Menu.addButton(lang_string.menu2,&quot;ListVehicle&quot;,selectedPage)\r\n    Menu.addButton(lang_string.menu1,&quot;StoreVehicle&quot;,nil)\r\n    Menu.addButton(lang_string.menu3,&quot;CloseMenu&quot;,nil) \r\nend\r\n\r\nfunction StoreVehicle()\r\n  Citizen.CreateThread(function()\r\n    local caissei = GetClosestVehicle(garageSelected.x, garageSelected.y, garageSelected.z, 3.000, 0, 70)\r\n    SetEntityAsMissionEntity(caissei, true, true)\r\n    local plate = GetVehicleNumberPlateText(caissei)\r\n\tlocal vtype = &quot;car&quot;\r\n\tif IsThisModelABike(GetEntityModel(caissei)) then\r\n\t\tvtype = &quot;bike&quot;\r\n\tend\r\n    if DoesEntityExist(caissei) then\r\n      TriggerServerEvent(&amp;#039;ply_garages:CheckForVeh&amp;#039;, plate, vehicles[vtype][2], vtype)\r\n    else\r\n      drawNotification(lang_string.text6)\r\n    end   \r\n  end)\r\n  CloseMenu()\r\nend\r\n\r\nfunction ListVehicle(page)\r\n    ped = GetPlayerPed(-1)\r\n\tselectedPage = page\r\n    MenuTitle = lang_string.menu4\r\n    ClearMenu()\r\n\tlocal count = 0\r\n    for ind, value in pairs(GVEHICLES) do\r\n\t  if ((count &gt;= (page*10)) and (count &lt; ((page*10)+10))) then\r\n        Menu.addButton(tostring(value.vehicle_name), &quot;OptionVehicle&quot;, value.vehicle_name)\r\n\t  end\r\n\t  count = count + 1\r\n    end   \r\n    Menu.addButton(lang_string.menu12,&quot;ListVehicle&quot;,page+1)\r\n\tif page == 0 then\r\n      Menu.addButton(lang_string.menu7,&quot;MenuGarage&quot;,nil)\r\n\telse\r\n      Menu.addButton(lang_string.menu7,&quot;ListVehicle&quot;,page-1)\r\n\tend\r\nend\r\n\r\nfunction OptionVehicle(vehID)\r\n  local vehID = vehID\r\n    MenuTitle = &quot;Options&quot;\r\n    ClearMenu()\r\n    Menu.addButton(lang_string.menu6, &quot;SpawnVehicle&quot;, vehID)\r\n    Menu.addButton(lang_string.menu7, &quot;ListVehicle&quot;, selectedPage)\r\nend\r\n\r\nfunction SpawnVehicle(vehID)\r\n  local vehID = vehID\r\n  TriggerServerEvent(&amp;#039;ply_garages:CheckForSpawnVeh&amp;#039;, vehID)\r\n  CloseMenu()\r\nend\r\n\r\n\r\nfunction drawNotification(text)\r\n  SetNotificationTextEntry(&quot;STRING&quot;)\r\n  AddTextComponentString(text)\r\n  DrawNotification(false, false)\r\nend\r\n\r\nfunction CloseMenu()\r\n    Menu.hidden = true    \r\n    TriggerServerEvent(&quot;ply_garages:CheckGarageForVeh&quot;)\r\nend\r\n\r\nfunction LocalPed()\r\n  return GetPlayerPed(-1)\r\nend\r\n\r\nfunction IsPlayerInRangeOfGarage()\r\n  return inrangeofgarage\r\nend\r\n\r\nfunction Chat(debugg)\r\n    TriggerEvent(&quot;chatMessage&quot;, &amp;#039;&amp;#039;, { 0, 0x99, 255 }, tostring(debugg))\r\nend\r\n\r\nfunction ply_drawTxt(text,font,centre,x,y,scale,r,g,b,a)\r\n  SetTextFont(font)\r\n  SetTextProportional(0)\r\n  SetTextScale(scale, scale)\r\n  SetTextColour(r, g, b, a)\r\n  SetTextDropShadow(0, 0, 0, 0,255)\r\n  SetTextEdge(1, 0, 0, 0, 255)\r\n  SetTextDropShadow()\r\n  SetTextOutline()\r\n  SetTextCentre(centre)\r\n  SetTextEntry(&quot;STRING&quot;)\r\n  AddTextComponentString(text)\r\n  DrawText(x , y)\r\nend\r\n\r\n--[[Citizen]]--\r\n\r\nCitizen.CreateThread(function()\r\n  while true do\r\n    Citizen.Wait(0)\r\n    for _, garage in pairs(garages) do\r\n      DrawMarker(1, garage.x, garage.y, garage.z, 0, 0, 0, 0, 0, 0, 3.001, 3.0001, 0.5001, 0, 155, 255, 200, 0, 0, 0, 0)\r\n      if GetDistanceBetweenCoords(garage.x, garage.y, garage.z, GetEntityCoords(LocalPed())) &lt; 3 and IsPedInAnyVehicle(LocalPed(), true) == false then\r\n        ply_drawTxt(lang_string.menu8,0,1,0.5,0.8,0.6,255,255,255,255)\r\n        if IsControlJustPressed(1, 86) then\r\n          garageSelected.x = garage.x\r\n          garageSelected.y = garage.y\r\n          garageSelected.z = garage.z\r\n          MenuGarage()\r\n          Menu.hidden = not Menu.hidden \r\n        end\r\n        Menu.renderGUI() \r\n      end\r\n    end\r\n  end\r\nend)\r\n\r\nCitizen.CreateThread(function()\r\n  while true do\r\n    local near = false\r\n    Citizen.Wait(0)\r\n    for _, garage in pairs(garages) do    \r\n      if (GetDistanceBetweenCoords(garage.x, garage.y, garage.z, GetEntityCoords(LocalPed())) &lt; 3 and near ~= true) then \r\n        near = true             \r\n      end\r\n    end\r\n    if near == false then \r\n      Menu.hidden = true\r\n    end\r\n  end\r\nend)\r\n\r\nCitizen.CreateThread(function()\r\n    for _, item in pairs(garages) do\r\n    item.blip = AddBlipForCoord(item.x, item.y, item.z)\r\n    SetBlipSprite(item.blip, item.id)\r\n    SetBlipAsShortRange(item.blip, true)\r\n    SetBlipColour(item.blip, item.colour)\r\n    BeginTextCommandSetBlipName(&quot;STRING&quot;)\r\n    AddTextComponentString(item.name)\r\n    EndTextCommandSetBlipName(item.blip)\r\n    end\r\nend)\r\n\r\n--[[Events]]--\r\n\r\nRegisterNetEvent(&amp;#039;vrp_garages:setVehicle&amp;#039;)\r\nAddEventHandler(&amp;#039;vrp_garages:setVehicle&amp;#039;, function(vtype, vehicle)\r\n\tvehicles[vtype] = vehicle\r\nend)\r\n\r\nRegisterNetEvent(&amp;#039;ply_garages:addAptGarage&amp;#039;)\r\nAddEventHandler(&amp;#039;ply_garages:addAptGarage&amp;#039;, function(gx,gy,gz,gh)\r\nlocal alreadyExists = false\r\nfor _, garage in pairs(garages) do\r\n\tif garage.x == gx and garage.y == gy then\r\n\t\talreadyExists = true\r\n\tend\r\nend\r\nif not alreadyExists then\r\n\ttable.insert(garages, #garages + 1, {name=&quot;Apartment Garage&quot;, colour=3, id=357, x=gx, y=gy, z=gz, h=gh})\r\nend\r\nend)\r\n\r\nRegisterNetEvent(&amp;#039;ply_garages:getVehicles&amp;#039;)\r\nAddEventHandler(&quot;ply_garages:getVehicles&quot;, function(THEVEHICLES)\r\n    GVEHICLES = {}\r\n    GVEHICLES = THEVEHICLES\r\nend)\r\n\r\nAddEventHandler(&quot;playerSpawned&quot;, function()\r\n    TriggerServerEvent(&quot;ply_garages:CheckGarageForVeh&quot;)\r\n    TriggerServerEvent(&quot;ply_garages:CheckForAptGarages&quot;)\r\nend)</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'