b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="cpp">#include &lt;iostream&gt;\n#include &lt;windows&gt;\nusing namespace std;\n\nbool serverChoice();//PROTOTYP OF serverChoice\nbool SERVER = true;\n\nint main(int argc, char *argv[])\n{\n    WSADATA wsaData;\n    WORD wsaVersion = MAKEWORD(1,1);\n    if(WSAStartup(wsaVersion, &amp;wsaData;) != 0){\n        cout &lt;&lt; &quot;There was some problem in initializating WSA!\\n&quot;;\n        cin.get();\n        return -1;\n    }\n    cout &lt;&lt; &quot;The WSA initialization proced successfully!\\n&quot;;\n    SERVER = serverChoice();\n    cin.get();\n\n    if(SERVER){\n        SOCKET serverPC = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n        hostent *serverInfo;\n        //TYPE IN AN ADDRESS OF SERVER\n        char serverAddrStr[256] = {\'\\0\'};\n        cout &lt;&lt; &quot;Type in an address of the server: &quot;;\n        cin.getline(serverAddrStr, 256);\n        if(serverAddrStr[0] == \'\\0\'){\n            char standardAddr[4] = {\'\\127\',\'\\0\',\'\\0\',\'\\1\'};\n            serverInfo = gethostbyaddr(standardAddr, 4, AF_INET);\n        }\n        else{\n            unsigned int serverAddrBuf = inet_addr(serverAddrStr);\n            serverInfo = gethostbyaddr((char*)&amp;serverAddrBuf;, 4, AF_INET);\n        }\n\n        sockaddr_in serverAddr;\n        sockaddr_in clientAddr;\n        serverAddr.sin_family = serverInfo-&gt;h_addrtype;\n        serverAddr.sin_port = htons(12345);\n        serverAddr.sin_addr = *((in_addr*)serverInfo-&gt;h_addr_list[0]);\n\n        if(bind(serverPC, (sockaddr*)&amp;serverAddr;, sizeof(serverAddr)) != 0){\n            cout &lt;&lt; &quot;There was some problem in binding the server socket!\\n&quot;;\n            WSACleanup();\n            cin.get();\n            return -1;\n        }\n        if(listen(serverPC, 32) != 0){\n            cout &lt;&lt; &quot;There was some problem in listening of the server socket!\\n&quot;;\n            WSACleanup();\n            cin.get();\n            return -1;\n        }\n        cout &lt;&lt; &quot;Server is waiting for connection of some client...\\n&quot;;\n\n        int addrlen = sizeof(clientAddr);\n        SOCKET clientPC = accept(serverPC, (sockaddr*)&amp;clientAddr;, &amp;addrlen;);\n        if(clientPC == INVALID_SOCKET){\n            cout &lt;&lt; &quot;There was some problem in connecting client to server!\\n&quot;;\n            WSACleanup();\n            cin.get();\n            return -1;\n        }\n        cout &lt;&lt; &quot;Some client connect to this server from address: &quot; &lt;&lt; inet xss=removed xss=removed&gt;&gt; sendInt;\n        send(clientPC, (char*)&amp;sendInt;, 4, 0);\n        cout &lt;&lt; &quot;Data were successfully sent!\\n&quot;;\n\n        cin.get();\n        //COMMUNICATION END\n\n        closesocket(clientPC);\n        cout &lt;&lt; &quot;Connection with client was destroyed!\\n&quot;;\n        closesocket(serverPC);\n        cout &lt;&lt; &quot;Server was destroyed!\\n&quot;;\n\n    }\n    else{\n        SOCKET serverPC = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n        hostent *serverInfo;\n        char serverAddrBuf[256] = {\'\\0\'};\n        cout &lt;&lt; &quot;Type in an address of the server which you want to join: &quot;;\n        cin.getline(serverAddrBuf, 256);\n        if(serverAddrBuf[0] == \'\\0\'){\n            char serverAddress[4] = {\'\\127\',\'\\0\',\'\\0\',\'\\1\'};\n            serverInfo = gethostbyaddr(serverAddress, 4, AF_INET);\n        }\n        else{\n            unsigned int serverAddrBin = inet_addr(serverAddrBuf);\n            serverInfo = gethostbyaddr((char*)&amp;serverAddrBin;, 4, AF_INET);\n        }\n        cout &lt;&lt; &quot;Connecting to the server...\\n&quot;;\n\n        sockaddr_in serverAddr;\n        serverAddr.sin_family = serverInfo-&gt;h_addrtype;\n        serverAddr.sin_port = htons(12345);\n        serverAddr.sin_addr = *((in_addr*)serverInfo-&gt;h_addr_list[0]);\n\n        if(connect(serverPC, (sockaddr*)&amp;serverAddr;, sizeof(serverAddr)) != 0){\n            cout &lt;&lt; &quot;There was some problem in connecting to the server!\\n&quot;;\n            WSACleanup();\n            cin.get();\n            return -1;\n        }\n        cout &lt;&lt; &quot;The client successfully connected to the server: &quot; &lt;&lt; inet xss=removed xss=removed&gt;&gt; sendInt;\n        send(serverPC, (char*)&amp;sendInt;, 4, 0);\n        cout &lt;&lt; &quot;Data were successfully sent!\\nClient is waiting for incoming data from the server...\\n&quot;;\n        recv(serverPC, (char*)&amp;recvInt;, 4, 0);\n        cout &lt;&lt; &quot;Recived data from the server: &quot; &lt;&lt; recvInt srvChoice = \'\\0\'&gt;&gt; srvChoice;\n    switch(srvChoice){\n        case \'C\': case \'c\':\n            return true;\n            break;\n        case \'J\': case \'j\':\n            return false;\n            break;\n        default:\n            cout &lt;&lt; &quot;You entered invalid letter!\\n&quot;;\n            goto choice;\n    }\n}</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'