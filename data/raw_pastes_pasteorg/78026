b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="nohighlight">public class DrawingView extends View {\n\n //drawing path\n private Path drawPath;\n //drawing and canvas paint\n private Paint drawPaint, canvasPaint;\n //initial color\n private int paintColor = 0xFF660000, paintAlpha = 255;\n //canvas\n private Canvas drawCanvas;\n //canvas bitmap\n private Bitmap canvasBitmap;\n //brush sizes\n private float brushSize, lastBrushSize;\n //erase flag\n private boolean erase=false;\n\n public DrawingView(Context context, AttributeSet attrs){\n  super(context, attrs);\n  setupDrawing();\n }\n\n //setup drawing\n private void setupDrawing(){\n\n  //prepare for drawing and setup paint stroke properties\n  brushSize = getResources().getInteger(R.integer.medium_size);\n  lastBrushSize = brushSize;\n  drawPath = new Path();\n  drawPaint = new Paint();\n  drawPaint.setColor(paintColor);\n  drawPaint.setAntiAlias(true);\n  drawPaint.setStrokeWidth(brushSize);\n  drawPaint.setStyle(Paint.Style.STROKE);\n  drawPaint.setStrokeJoin(Paint.Join.ROUND);\n  drawPaint.setStrokeCap(Paint.Cap.ROUND);\n  canvasPaint = new Paint(Paint.DITHER_FLAG);\n }\n\n //size assigned to view\n @Override\n protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n  super.onSizeChanged(w, h, oldw, oldh);\n  canvasBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);\n  drawCanvas = new Canvas(canvasBitmap);\n }\n\n //draw the view - will be called after touch event\n @Override\n protected void onDraw(Canvas canvas) {\n  canvas.drawBitmap(canvasBitmap, 0, 0, canvasPaint);\n  canvas.drawPath(drawPath, drawPaint);\n }\n\n //register user touches as drawing action\n @Override\n public boolean onTouchEvent(MotionEvent event) {\n \n  if(!MainActivity.zoom) {\n   System.out.println(&quot;11 Zoom : &quot; + ((MainActivity)getContext()).getZoomFocusX());\n\n   System.out.println(&quot;11 Touch X : &quot; + event.getX());\n   System.out.println(&quot;11 Touch Y : &quot; + event.getY());\n   \n   float touchX = event.getX();/// ((MainActivity)getContext()).getZoomFocusX();\n   float touchY = event.getY();/// ((MainActivity)getContext()).getZoomFocusY();\n\n   System.out.println(&quot;11 Draw X : &quot; + touchX);\n   System.out.println(&quot;11 Draw Y : &quot; + touchY);\n   //respond to down, move and up events\n   switch (event.getAction()) {\n    case MotionEvent.ACTION_DOWN:\n     drawPath.moveTo(touchX, touchY);\n     break;\n    case MotionEvent.ACTION_MOVE:\n     drawPath.lineTo(touchX, touchY);\n     break;\n    case MotionEvent.ACTION_UP:\n     drawPath.lineTo(touchX, touchY);\n     drawCanvas.drawPath(drawPath, drawPaint);\n     drawPath.reset();\n     break;\n    default:\n     return false;\n   }\n   //redraw\n   invalidate();\n  }\n  return true;\n\n }\n\n //update color\n public void setColor(String newColor){\n  invalidate();\n  //check whether color value or pattern name\n  if(newColor.startsWith(&quot;#&quot;)){\n   paintColor = Color.parseColor(newColor);\n   drawPaint.setColor(paintColor);\n   drawPaint.setShader(null);\n  }\n  else{\n   //pattern\n   int patternID = getResources().getIdentifier(\n     newColor, &quot;drawable&quot;, &quot;com.example.drawingfun&quot;);\n   //decode\n   Bitmap patternBMP = BitmapFactory.decodeResource(getResources(), patternID);\n   //create shader\n   BitmapShader patternBMPshader = new BitmapShader(patternBMP,\n     Shader.TileMode.REPEAT, Shader.TileMode.REPEAT);\n   //color and shader\n   drawPaint.setColor(0xFFFFFFFF);\n   drawPaint.setShader(patternBMPshader);\n  }\n }\n\n //set brush size\n public void setBrushSize(float newSize){\n  float pixelAmount = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,\n    newSize, getResources().getDisplayMetrics());\n  brushSize=pixelAmount;\n  drawPaint.setStrokeWidth(brushSize);\n }\n\n //get and set last brush size\n public void setLastBrushSize(float lastSize){\n  lastBrushSize=lastSize;\n }\n public float getLastBrushSize(){\n  return lastBrushSize;\n }\n\n //set erase true or false\n public void setErase(boolean isErase){\n  erase=isErase;\n  if(erase) drawPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));\n  else drawPaint.setXfermode(null);\n }\n\n //start new drawing\n public void startNew(){\n  drawCanvas.drawColor(0, PorterDuff.Mode.CLEAR);\n  invalidate();\n }\n\n //return current alpha\n public int getPaintAlpha(){\n  return Math.round((float)paintAlpha/255*100);\n }\n\n //set alpha\n public void setPaintAlpha(int newAlpha){\n  paintAlpha=Math.round((float)newAlpha/100*255);\n  drawPaint.setColor(paintColor);\n  drawPaint.setAlpha(paintAlpha);\n }\n}</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'