b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="java">package co.id.bni.example.main;\n\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.Authenticator;\nimport java.net.PasswordAuthentication;\nimport java.net.URI;\nimport java.net.URLEncoder;\n\nimport oracle.irm.engine.types.classifications.item.ItemCode;\nimport oracle.irm.engine.types.core.account.AccountRef;\nimport oracle.irm.engine.types.core.classification.Classification;\nimport oracle.irm.engine.types.core.general.Label;\nimport oracle.irm.engine.types.rights.context.DocumentRight;\nimport oracle.irm.engine.types.rights.context.DocumentRole;\nimport oracle.irm.engine.types.rights.context.Domain;\nimport oracle.irm.engine.types.rights.context.DomainRef;\nimport oracle.irm.j2ee.jws.core.storage.DesktopServices;\nimport oracle.irm.j2ee.jws.core.storage.DesktopServicesEndpoint;\nimport oracle.irm.j2ee.jws.rights.context.DocumentRightOperations;\nimport oracle.irm.j2ee.jws.rights.context.DocumentRightOperationsEndpoint;\nimport oracle.irm.j2ee.jws.rights.context.DocumentRoleOperations;\nimport oracle.irm.j2ee.jws.rights.context.DocumentRoleOperationsEndpoint;\nimport oracle.irm.j2ee.jws.rights.context.DomainOperations;\nimport oracle.irm.j2ee.jws.rights.context.DomainOperationsEndpoint;\n\npublic class MainTesting {\n    //Unsupported endpoint address: 16100/irm_services/document_right_operations\n    private static final String hostPort = &quot;http://irmapp.bni.co.id:787&quot;;\n        private static final String username=&quot;user1&quot;;\n        private static final String password=&quot;password&quot;;\n\n    private static final String url = hostPort + &quot;/irm_desktop&quot;;\n\n    public static void main(String[] args) {\n        MainTesting main = new MainTesting();\n        \n        main.doAuthentication(username, password);\n        main.showListDomain(hostPort, username, password);\n//        main.showClasification(hostPort, username, password, url);\n//        main.showListingRightsAssigned(hostPort, username, password);\n    }\n    \n    public void showListRole(String hostPort, String username, String password){\n        try {\n            DocumentRoleOperationsEndpoint roleOperations = DocumentRoleOperations.getDocumentRoleOperationsEndpoint(hostPort);\n            \n            DomainOperationsEndpoint domainOperations = DomainOperations.getDomainOperationsEndpoint(hostPort);\n            Domain[] listDomain = domainOperations.listDomains();\n            for (Domain domain : listDomain) {\n                System.out.println(&quot;Domain UUID : &quot; + domain.getUuid());\n                for (Label label : domain.getLabels()) {\n                    if(&quot;English&quot;.equals(label.getLocale().getDisplayName())){\n                        System.out.println(label.getLocale().getDisplayName() + &quot; : &quot; + label.getName());\n                    }\n                }\n            }\n        } catch (Exception e) {\n            System.out.println(&quot;error Exception in  test : &quot; + e.getMessage());\n        }\n    }\n    \n    \n    public void showListDomain(String hostPort, String username, String password){\n        try {\n            DocumentRoleOperationsEndpoint roleOperations = DocumentRoleOperations.getDocumentRoleOperationsEndpoint(hostPort);\n            DomainOperationsEndpoint domainOperations = DomainOperations.getDomainOperationsEndpoint(hostPort);\n            Domain[] listDomain = domainOperations.listDomains();\n            for (Domain domain : listDomain) {\n                System.out.println(&quot;Domain UUID : &quot; + domain.getUuid());\n                for (Label label : domain.getLabels()) {\n                    if(&quot;English&quot;.equals(label.getLocale().getDisplayName())){\n                        System.out.println(&quot;  Domain Name : &quot; + label.getName());\n                        DomainRef domainRef = new DomainRef(domain.getUuid());\n                        DocumentRole[] listDocumentRole = roleOperations.listRoles(domainRef);\n                        for(DocumentRole role : listDocumentRole){\n                            System.out.println(&quot;   Role UUID : &quot; + role.getUuid());\n                            for (Label roleLabel : role.getLabels()) {\n                                if(&quot;English&quot;.equals(roleLabel.getLocale().getDisplayName())){\n                                    System.out.println(&quot;     Role Name : &quot; + roleLabel.getName());\n                                }\n                            }\n                            \n                        }\n                    }\n                }\n            }\n        } catch (Exception e) {\n            System.out.println(&quot;error Exception in  test : &quot; + e.getMessage());\n        }\n    }\n    \n    \n    public void doAuthentication(final String username,final String password){\n        Authenticator.setDefault(new Authenticator() {\n                protected PasswordAuthentication getPasswordAuthentication() {\n                    return new PasswordAuthentication(username, password.toCharArray());\n                }\n            });\n        \n    }\n\n    public void showListingRightsAssigned(String hostPort, String username, String password) {\n        try {\n            DocumentRightOperationsEndpoint rigthOpration = DocumentRightOperations.getDocumentRightOperationsEndpoint(hostPort);\n            AccountRef accountRef = new AccountRef(&quot;urn:user:&quot; + URLEncoder.encode(username, &quot;utf-8&quot;));\n            DocumentRight[] rights = rigthOpration.listRightsByAccount(accountRef);\n\n            for (DocumentRight docRight : rights) {\n                System.out.println(&quot;Account uuid: &quot; + docRight.getAccount().getUuid());\n                System.out.println(&quot;Context : &quot; + docRight.getContext().getUuid());\n                System.out.println(&quot;Role : &quot; + docRight.getRole().getUuid());\n                ItemCode[] itemCodes = docRight.getItemCodes();\n\n                if (itemCodes != null) {\n                    for (ItemCode item : itemCodes) {\n                        System.out.println(&quot;     ItemCode : &quot; + item.getValue());\n                    }\n                }\n                System.out.println(&quot;&quot;);\n            }\n        } catch (UnsupportedEncodingException e) {\n            System.out.println(&quot;error UnsupportedEncodingException in  showListingRightsAssigned&quot; + e.getMessage());\n        } catch (Exception e){\n            System.out.println(&quot;error Exception in  showListingRightsAssigned&quot; + e.getMessage());\n        }\n\n    }\n    \n    //url : http://irmapp.bni.co.id:16100/irm_desktop\n    public void showClasification(String hostPort, String username, String password, String url) {\n        URI serverURI = URI.create(url);\n        DesktopServicesEndpoint desktopServiceOperation = DesktopServices.getDesktopServicesEndpoint(hostPort);\n        Classification[] classification = desktopServiceOperation.listClassifications(serverURI);\n\n        for (Classification tempClass : classification) {\n            System.out.println(&quot;Classification id : &quot; + tempClass.getId());\n            for (Label label : tempClass.getLabels()) {\n                System.out.println(label.getLocale().getDisplayName() + &quot; : &quot; + label.getName());\n            }\n        }\n    }\n}\n</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'