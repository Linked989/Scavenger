b' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="www.paste.org - allows users to paste snippets of text, usually samples of source code, for public viewing."> <meta name="author" content="An Australian"> <link rel="icon" href="/favicon.ico"> <title>Paste code - paste.org</title>  <link href="/assets/themes/bleh/css/github-highlight.css" rel="stylesheet"> <script src="/assets/themes/bleh/js/highlight.pack.js"></script> <script>hljs.initHighlightingOnLoad();</script> </head> <body> <p><pre><code class="cpp">#pragma once\n\nnamespace philo1 {\n\n using namespace System;\n using namespace System::ComponentModel;\n using namespace System::Collections;\n using namespace System::Windows::Forms;\n using namespace System::Data;\n using namespace System::Drawing;\n using namespace System::Threading;\n\n public ref class philo\n {\n public: \n  bool eat;\n  char Name;\n  static PictureBox^ philosof = gcnew PictureBox();\n  philo (int i)\n  {\n    philosof-&gt;ImageLocati;\n   philosof-&gt;Tag=i;\n   philosof-&gt;Text=i.ToString();\n    philosof-&gt;Locati 40+40*i);\n   philosof-&gt;Invoke(gcnew Action&lt;int&gt;(&amp;philo1;::philo::phil));\n   //Controls-&gt;Add(philosof);\n  };\n  static void phil(int a)\n  {\n   philosof-&gt;Visible=false;\n  }\n  void ThreadProc()\n  {\n   for (;;)\n   {\n    int g;\n    Random^ rnd=gcnew Random();\n    g=rnd-&gt;Next(3000, 5000);\n    //MessageBox::Show(&quot;\xd0\xa4\xd0\xb8\xd0\xbb\xd0\xbe\xd1\x81\xd0\xbe\xd1\x84&quot; + Name + &quot; \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbf\xd0\xb8\xd1\x89\xd1\x83...&quot; + eat + System::Convert::ToString(g));\n    Thread::Sleep(g);\n    //MessageBox::Show (&quot;\xd0\xa4\xd0\xb8\xd0\xbb\xd0\xbe\xd1\x81\xd0\xbe\xd1\x84&quot; + Name + &quot; \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbd\xd1\x8f\xd0\xbb \xd0\xbf\xd0\xb8\xd1\x89\xd1\x83!&quot;);\n   };\n  };\n };\n /// &lt;summary&gt;\n /// \xd0\xa1\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xba\xd0\xb0 \xd0\xb4\xd0\xbb\xd1\x8f Form1\n /// &lt;/summary&gt;\n\n public ref class Form1 : public System::Windows::Forms::Form\n {\n public:\n  Form1(void)\n  {\n   InitializeComponent();\n   //\n   //TODO: \xd0\xb4\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd1\x8c\xd1\x82\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xb4 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\n   //\n  }\n\n protected:\n  /// &lt;summary&gt;\n  /// \xd0\x9e\xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb2\xd1\x81\xd0\xb5 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb5 \xd1\x80\xd0\xb5\xd1\x81\xd1\x83\xd1\x80\xd1\x81\xd1\x8b.\n  /// &lt;/summary&gt;\n  ~Form1()\n  {\n   if (components)\n   {\n    delete components;\n   }\n  }\n private: System::Windows::Forms::Button^  button1;\n\n private:\n   static array&lt;philo^&gt;^ philosof= gcnew array &lt;philo^&gt;(5);\n   static array&lt;Thread^&gt;^ potok= gcnew array &lt;Thread^&gt;(5);\n   \n protected: \n\n private:\n  /// &lt;summary&gt;\n  /// \xd0\xa2\xd1\x80\xd0\xb5\xd0\xb1\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0.\n  /// &lt;/summary&gt;\n  System::ComponentModel::Container ^components;\n\n#pragma region Windows Form Designer generated code\n  /// &lt;summary&gt;\n  /// \xd0\x9e\xd0\xb1\xd1\x8f\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xba\xd0\xb8 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0 - \xd0\xbd\xd0\xb5 \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8f\xd0\xb9\xd1\x82\xd0\xb5\n  /// \xd1\x81\xd0\xbe\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xb8 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd0\xb8 \xd1\x80\xd0\xb5\xd0\xb4\xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0 \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb0.\n  /// &lt;/summary&gt;\n  void InitializeComponent(void)\n  {\n    this-&gt;butt System::Windows::Forms::Button());\n   this-&gt;SuspendLayout();\n   // \n   // button1\n   // \n    this-&gt;button1-&gt;Locati 88);\n   this-&gt;button1-&gt;Name = L&quot;button1&quot;;\n   this-&gt;button1-&gt;Size = System::Drawing::Size(75, 23);\n   this-&gt;button1-&gt;TabIndex = 0;\n   this-&gt;button1-&gt;Text = L&quot;button1&quot;;\n   this-&gt;button1-&gt;UseVisualStyleBackColor = true;\n   this-&gt;button1-&gt;Click += gcnew System::EventHandler(this, &amp;Form1;::button1_Click);\n   // \n   // Form1\n   // \n    this-&gt;AutoScaleDimensi 13);\n   this-&gt;AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;\n   this-&gt;ClientSize = System::Drawing::Size(802, 343);\n   this-&gt;Controls-&gt;Add(this-&gt;button1);\n   this-&gt;Name = L&quot;Form1&quot;;\n   this-&gt;Text = L&quot;Form1&quot;;\n   this-&gt;FormClosed += gcnew System::Windows::Forms::FormClosedEventHandler(this, &amp;Form1;::Form1_FormClosed);\n   this-&gt;Load += gcnew System::EventHandler(this, &amp;Form1;::Form1_Load);\n   this-&gt;ResumeLayout(false);\n  }\n#pragma endregion\n private: System::Void button1_Click(System::Object^  sender, System::EventArgs^  e) {\n     /*array &lt;PictureBox^&gt;^ plate = gcnew array &lt;PictureBox^&gt;(5);\n     array &lt;PictureBox^&gt;^ fork = gcnew array &lt;PictureBox^&gt;(5);\n     for (int i=0;i&lt;5;i++)\n     {\n      plate[i]=gcnew PictureBox();\n      plate[i]-&gt;Size = Drawing::Size(75, 69);\n      plate[i]-&gt;SizeMode = System::Windows::Forms::PictureBoxSizeMode::AutoSize;\n       plate[i]-&gt;ImageLocati;\n      Controls-&gt;Add(plate[i]);\n     }\n      plate[0]-&gt;Locati 100);\n      plate[1]-&gt;Locati 180 );\n      plate[2]-&gt;Locati 180);\n      plate[3]-&gt;Locati 260);\n      plate[4]-&gt;Locati 260);\n     \n     for (int i=0;i&lt;5;i++)\n     {\n      fork[i]=gcnew PictureBox();\n      fork[i]-&gt;Size = Drawing::Size(13, 290);\n      fork[i]-&gt;SizeMode = System::Windows::Forms::PictureBoxSizeMode::AutoSize;\n       fork[i]-&gt;ImageLocati;\n      Controls-&gt;Add(fork[i]);\n     }\n      fork[0]-&gt;ImageLocati;\n      fork[1]-&gt;ImageLocati;\n      fork[3]-&gt;ImageLocati;\n      fork[2]-&gt;ImageLocati;\n      fork[4]-&gt;ImageLocati;\n      fork[0]-&gt;Locati 130);\n      fork[1]-&gt;Locati 250);\n      fork[2]-&gt;Locati 135);\n      fork[3]-&gt;Locati 250);\n      fork[4]-&gt;Locati 252);*/\n    }\n private: System::Void Form1_Load(System::Object^  sender, System::EventArgs^  e) {\n    for (int i=0;i&lt;philosof-&gt;Length;i++)\n      {\n       potok[i]=gcnew Thread(gcnew ThreadStart(philosof[i], &amp;philo1;::philo::ThreadProc));\n       potok[i]-&gt;Start();\n      \n      };\n    }\n private: System::Void Form1_FormClosed(System::Object^  sender, System::Windows::Forms::FormClosedEventArgs^  e) {\n    for (int k=0;k&lt;potok-&gt;Length;k++)\n       potok[k]-&gt;Abort();\n    }\n };\n}</code></pre></p> <p align="right"><span style="font-size: 60%">Add a code snippet to your website: <a href="https://www.paste.org" target="_blank">www.paste.org</a></span></p> </body> </html>'